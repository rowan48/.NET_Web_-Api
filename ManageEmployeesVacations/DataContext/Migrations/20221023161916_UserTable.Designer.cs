// <auto-generated />
using System;
using DataCon;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataCon.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221023161916_UserTable")]
    partial class UserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("GenderId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Models.EmployeeVacation", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("VacationID")
                        .HasColumnType("int");

                    b.Property<double>("EmployeeBalance")
                        .HasColumnType("double");

                    b.Property<double>("EmployeeUsedVacation")
                        .HasColumnType("double");

                    b.HasKey("EmployeeID", "VacationID");

                    b.HasIndex("VacationID");

                    b.ToTable("employee_vacation", (string)null);
                });

            modelBuilder.Entity("Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GenderType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            GenderType = "Female"
                        },
                        new
                        {
                            GenderId = 2,
                            GenderType = "Male"
                        },
                        new
                        {
                            GenderId = 3,
                            GenderType = "Other"
                        });
                });

            modelBuilder.Entity("Models.UserInfo", b =>
                {
                    b.Property<DateTime?>("CreatedDate")
                        .IsUnicode(false)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("UserInfo", (string)null);
                });

            modelBuilder.Entity("Models.Vacation", b =>
                {
                    b.Property<int>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<string>("VacationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("VacationId");

                    b.ToTable("Vacation");

                    b.HasData(
                        new
                        {
                            VacationId = 1,
                            Balance = 14.0,
                            VacationName = "Schedule"
                        },
                        new
                        {
                            VacationId = 2,
                            Balance = 7.0,
                            VacationName = "Casual"
                        });
                });

            modelBuilder.Entity("Models.VacationRequest", b =>
                {
                    b.Property<int>("VacationRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndVacationDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("StartVacationDate")
                        .HasColumnType("Date");

                    b.Property<double>("VacationDuration")
                        .HasColumnType("double");

                    b.Property<int>("VacationID")
                        .HasColumnType("int");

                    b.HasKey("VacationRequestId");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("VacationID");

                    b.ToTable("vacation_request", (string)null);
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.HasOne("Models.Gender", "Gender")
                        .WithMany("Employees")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Models.EmployeeVacation", b =>
                {
                    b.HasOne("Models.Employee", null)
                        .WithMany("EmployeeVacations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Vacation", "Vacation")
                        .WithMany("EmployeeVacations")
                        .HasForeignKey("VacationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacation");
                });

            modelBuilder.Entity("Models.VacationRequest", b =>
                {
                    b.HasOne("Models.Employee", "Employee")
                        .WithMany("VacationRequests")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Vacation", "Vacation")
                        .WithMany()
                        .HasForeignKey("VacationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Vacation");
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.Navigation("EmployeeVacations");

                    b.Navigation("VacationRequests");
                });

            modelBuilder.Entity("Models.Gender", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Models.Vacation", b =>
                {
                    b.Navigation("EmployeeVacations");
                });
#pragma warning restore 612, 618
        }
    }
}
